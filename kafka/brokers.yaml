apiVersion : v1
kind : Service
metadata:
  name: broker1
  labels:
    env: prod
    owner: user
spec:
  selector:
    app : kafkabroker1  # Selecting PODS
  ports:
    - name      : kafkabroker1
      protocol  : TCP
      targetPort: 9092  # Port on POD
      port      : 9092
    - name      : kafkabroker1-jmx
      protocol  : TCP
      targetPort: 7071  # Port on POD
      port      : 7071
---
apiVersion : v1
kind : Service
metadata:
  name: broker2
  labels:
    env: prod
    owner: user
spec:
  selector:
    app : kafkabroker2  # Selecting PODS
  ports:
    - name      : kafkabroker2
      protocol  : TCP
      targetPort: 9092  # Port on POD
      port      : 9092
    - name      : kafkabroker2-jmx
      protocol  : TCP
      targetPort: 7071  # Port on POD
      port      : 7071
---
apiVersion : v1
kind : Service
metadata:
  name: broker3
  labels:
    env: prod
    owner: user
spec:
  selector:
    app : kafkabroker3  # Selecting PODS
  ports:
    - name      : kafkabroker3
      protocol  : TCP
      targetPort: 9092  # Port on POD
      port      : 9092
    - name      : kafkabroker3-jmx
      protocol  : TCP
      targetPort: 7071  # Port on POD
      port      : 7071
---
apiVersion: v1
data:
  server.properties: |+
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

    # see kafka.server.KafkaConfig for additional details and defaults

    ############################# Server Basics #############################

    # The id of the broker. This must be set to a unique integer for each broker.
    broker.id=1
    message.max.bytes=52429400
    ############################# Socket Server Settings #############################

    # The address the socket server listens on. It will get the value returned from
    # java.net.InetAddress.getCanonicalHostName() if not configured.
    #   FORMAT:
    #     listeners = listener_name://host_name:port
    #   EXAMPLE:
    #     listeners = PLAINTEXT://your.host.name:9092
    listeners=PLAINTEXT://brokerhostname:9092

    # Hostname and port the broker will advertise to producers and consumers. If not set,
    # it uses the value for "listeners" if configured.  Otherwise, it will use the value
    # returned from java.net.InetAddress.getCanonicalHostName().
    advertised.listeners=PLAINTEXT://advname:9092

    # Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details
    #listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL

    # The number of threads that the server uses for receiving requests from the network and sending responses to the network
    num.network.threads=3

    # The number of threads that the server uses for processing requests, which may include disk I/O
    num.io.threads=8

    # The send buffer (SO_SNDBUF) used by the socket server
    socket.send.buffer.bytes=102400

    # The receive buffer (SO_RCVBUF) used by the socket server
    socket.receive.buffer.bytes=102400

    # The maximum size of a request that the socket server will accept (protection against OOM)
    socket.request.max.bytes=104857600


    ############################# Log Basics #############################

    # A comma separated list of directories under which to store log files
    log.dirs=/data/kafka-logs

    # The default number of log partitions per topic. More partitions allow greater
    # parallelism for consumption, but this will also result in more files across
    # the brokers.
    num.partitions=1

    # The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.
    # This value is recommended to be increased for installations with data dirs located in RAID array.
    num.recovery.threads.per.data.dir=1

    ############################# Internal Topic Settings  #############################
    # The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"
    # For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
    transaction.state.log.min.isr=1

    ############################# Log Flush Policy #############################

    # Messages are immediately written to the filesystem but by default we only fsync() to sync
    # the OS cache lazily. The following configurations control the flush of data to disk.
    # There are a few important trade-offs here:
    #    1. Durability: Unflushed data may be lost if you are not using replication.
    #    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.
    #    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.
    # The settings below allow one to configure the flush policy to flush data after a period of time or
    # every N messages (or both). This can be done globally and overridden on a per-topic basis.

    # The number of messages to accept before forcing a flush of data to disk
    #log.flush.interval.messages=10000

    # The maximum amount of time a message can sit in a log before we force a flush
    #log.flush.interval.ms=1000

    ############################# Log Retention Policy #############################

    # The following configurations control the disposal of log segments. The policy can
    # be set to delete segments after a period of time, or after a given size has accumulated.
    # A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
    # from the end of the log.

    # The minimum age of a log file to be eligible for deletion due to age
    log.retention.hours=168

    # A size-based retention policy for logs. Segments are pruned from the log unless the remaining
    # segments drop below log.retention.bytes. Functions independently of log.retention.hours.
    #log.retention.bytes=1073741824

    # The maximum size of a log segment file. When this size is reached a new log segment will be created.
    log.segment.bytes=1073741824

    # The interval at which log segments are checked to see if they can be deleted according
    # to the retention policies
    log.retention.check.interval.ms=300000

    ############################# Zookeeper #############################

    # Zookeeper connection string (see zookeeper docs for details).
    # This is a comma separated host:port pairs, each corresponding to a zk
    # server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
    # You can also append an optional chroot string to the urls to specify the
    # root directory for all kafka znodes.
    zookeeper.connect=zkhost1:2181,zkhost2:2181,zkhost3:2181

    # Timeout in ms for connecting to zookeeper
    zookeeper.connection.timeout.ms=18000


    ############################# Group Coordinator Settings #############################

    # The following configuration specifies the time, in milliseconds, that the GroupCoordinator will delay the initial consumer rebalance.
    # The rebalance will be further delayed by the value of group.initial.rebalance.delay.ms as new members join the group, up to a maximum of max.poll.interval.ms.
    # The default value for this is 3 seconds.
    # We override this to 0 here as it makes for a better out-of-the-box experience for development and testing.
    # However, in production environments the default value of 3 seconds is more suitable as this will help to avoid unnecessary, and potentially expensive, rebalances during application startup.
    group.initial.rebalance.delay.ms=0

kind: ConfigMap
metadata:
  name: config-kafka

---
apiVersion: v1
data:
  log4j.properties: |+
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    
    # Unspecified loggers and loggers with additivity=true output to server.log and stdout
    # Note that INFO only applies to unspecified loggers, the log level of the child logger is used otherwise
    log4j.rootLogger=INFO, stdout, kafkaAppender
    
    log4j.appender.stdout=org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n
    
    log4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH
    log4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log
    log4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.kafkaAppender.MaxFileSize=50MB
    log4j.appender.kafkaAppender.MaxBackupIndex=10
    log4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
    
    log4j.appender.stateChangeAppender=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.stateChangeAppender.DatePattern='.'yyyy-MM-dd-HH
    log4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log
    log4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.stateChangeAppender.MaxFileSize=50MB
    log4j.appender.stateChangeAppender.MaxBackupIndex=10
    log4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
    
    log4j.appender.requestAppender=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.requestAppender.DatePattern='.'yyyy-MM-dd-HH
    log4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log
    log4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.requestAppender.MaxFileSize=50MB
    log4j.appender.requestAppender.MaxBackupIndex=10
    log4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
    
    log4j.appender.cleanerAppender=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.cleanerAppender.DatePattern='.'yyyy-MM-dd-HH
    log4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log
    log4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.cleanerAppender.MaxFileSize=50MB
    log4j.appender.cleanerAppender.MaxBackupIndex=10
    log4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
    
    log4j.appender.controllerAppender=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.controllerAppender.DatePattern='.'yyyy-MM-dd-HH
    log4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log
    log4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.controllerAppender.MaxFileSize=50MB
    log4j.appender.controllerAppender.MaxBackupIndex=10
    log4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
    
    log4j.appender.authorizerAppender=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.authorizerAppender.DatePattern='.'yyyy-MM-dd-HH
    log4j.appender.authorizerAppender.File=${kafka.logs.dir}/kafka-authorizer.log
    log4j.appender.authorizerAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.authorizerAppender.MaxFileSize=50MB
    log4j.appender.authorizerAppender.MaxBackupIndex=10
    log4j.appender.authorizerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
    
    # Change the line below to adjust ZK client logging
    log4j.logger.org.apache.zookeeper=INFO
    
    # Change the two lines below to adjust the general broker logging level (output to server.log and stdout)
    log4j.logger.kafka=INFO
    log4j.logger.org.apache.kafka=INFO
    
    # Change to DEBUG or TRACE to enable request logging
    log4j.logger.kafka.request.logger=WARN, requestAppender
    log4j.additivity.kafka.request.logger=false
    
    # Uncomment the lines below and change log4j.logger.kafka.network.RequestChannel$ to TRACE for additional output
    # related to the handling of requests
    #log4j.logger.kafka.network.Processor=TRACE, requestAppender
    #log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender
    #log4j.additivity.kafka.server.KafkaApis=false
    log4j.logger.kafka.network.RequestChannel$=WARN, requestAppender
    log4j.additivity.kafka.network.RequestChannel$=false
    
    # Change the line below to adjust KRaft mode controller logging
    log4j.logger.org.apache.kafka.controller=INFO, controllerAppender
    log4j.additivity.org.apache.kafka.controller=false
    
    # Change the line below to adjust ZK mode controller logging
    log4j.logger.kafka.controller=TRACE, controllerAppender
    log4j.additivity.kafka.controller=false
    
    log4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender
    log4j.additivity.kafka.log.LogCleaner=false
    
    log4j.logger.state.change.logger=INFO, stateChangeAppender
    log4j.additivity.state.change.logger=false
    
    # Access denials are logged at INFO level, change to DEBUG to also log allowed accesses
    log4j.logger.kafka.authorizer.logger=INFO, authorizerAppender
    log4j.additivity.kafka.authorizer.logger=false
kind: ConfigMap
metadata:
  name: config-kafka-log4j
---
apiVersion: v1
data:
  run.sh: |-
    #!/bin/bash
    cp /bin/server.properties /opt/kafka/props/server.properties
    cp /bin/log4j.properties /opt/kafka/config/log4j.properties
    sed -i 's/brokerhostname/broker1/g' /opt/kafka/props/server.properties
    sed -i 's/advname:9092/kubernetes.docker.internal:32041/g' /opt/kafka/props/server.properties
    sed -i 's/broker.id=1/broker.id=1/g' /opt/kafka/props/server.properties
    bin/kafka-server-start.sh /opt/kafka/props/server.properties
kind: ConfigMap
metadata:
  name: kafkabroker1
---
apiVersion: v1
data:
  run.sh: |-
    #!/bin/bash
    cp /bin/server.properties /opt/kafka/props/server.properties
    cp /bin/log4j.properties /opt/kafka/config/log4j.properties
    sed -i 's/brokerhostname/broker2/g' /opt/kafka/props/server.properties
    sed -i 's/advname:9092/kubernetes.docker.internal:32042/g' /opt/kafka/props/server.properties
    sed -i 's/broker.id=1/broker.id=2/g' /opt/kafka/props/server.properties
    bin/kafka-server-start.sh /opt/kafka/props/server.properties
kind: ConfigMap
metadata:
  name: kafkabroker2
---
apiVersion: v1
data:
  run.sh: |-
    #!/bin/bash
    cp /bin/server.properties /opt/kafka/props/server.properties
    cp /bin/log4j.properties /opt/kafka/config/log4j.properties
    sed -i 's/brokerhostname/broker3/g' /opt/kafka/props/server.properties
    sed -i 's/advname:9092/kubernetes.docker.internal:32043/g' /opt/kafka/props/server.properties
    sed -i 's/broker.id=1/broker.id=3/g' /opt/kafka/props/server.properties
    bin/kafka-server-start.sh /opt/kafka/props/server.properties
kind: ConfigMap
metadata:
  name: kafkabroker3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafkabroker1
    project: base
  name: kafkabroker1
spec:
  selector:
    matchLabels:
      project: base
  template:
    metadata:
      labels:
        app: kafkabroker1
        project: base
    spec:
      containers:
        - name : kafkabroker1
          command:
            - /bin/run.sh
          env:
            - name: KAFKA_OPTS
              value: -javaagent:/opt/kafka/prometheus/jmx_prometheus_javaagent.jar=7071:/opt/kafka/prometheus/kafka-2_0_0.yml
          image : aggrik/kafka_multi:latest
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
            - mountPath: /data/kafka-logs
              name: kafkabroker1-data
            - mountPath: /opt/kafka/logs
              name: kafkabroker1-logs
            - mountPath: /bin/run.sh
              name: configmap-kafkabroker1-volume
              readOnly: false
              subPath: run.sh
            - mountPath: /bin/server.properties
              name: configmap-kafkabroker1-server-prop
              readOnly: false
              subPath: server.properties
            - mountPath: /bin/log4j.properties
              name: configmap-kafkabroker1-server-log4j
              readOnly: false
              subPath: log4j.properties         
      dnsPolicy: ClusterFirstWithHostNet
      hostname: broker1
      volumes:
        - name: kafkabroker1-data
          emptyDir: {}
          #hostPath:
          #  path: /storage/data/kafka/kafkabroker1
          #  type: DirectoryOrCreate
        - name: kafkabroker1-logs
          emptyDir: {}
          #hostPath:
          #  path: /storage/logs/kafka/kafkabroker1
          #  type: DirectoryOrCreate
        - configMap:
            defaultMode: 509
            name: kafkabroker1
          name: configmap-kafkabroker1-volume
        - configMap:
            defaultMode: 509
            name: config-kafka
          name: configmap-kafkabroker1-server-prop
        - configMap:
            defaultMode: 509
            name: config-kafka-log4j
          name: configmap-kafkabroker1-server-log4j     
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafkabroker2
    project: base
  name: kafkabroker2
spec:
  selector:
    matchLabels:
      project: base
  template:
    metadata:
      labels:
        app: kafkabroker2
        project: base
    spec:
      containers:
        - name : kafkabroker2
          command:
            - /bin/run.sh
          env:
            - name: KAFKA_OPTS
              value: -javaagent:/opt/kafka/prometheus/jmx_prometheus_javaagent.jar=7071:/opt/kafka/prometheus/kafka-2_0_0.yml
          image : aggrik/kafka_multi:latest
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
            - mountPath: /data/kafka-logs
              name: kafkabroker2-data
            - mountPath: /opt/kafka/logs
              name: kafkabroker2-logs
            - mountPath: /bin/run.sh
              name: configmap-kafkabroker2-volume
              readOnly: false
              subPath: run.sh
            - mountPath: /bin/server.properties
              name: configmap-kafkabroker2-server-prop
              readOnly: false
              subPath: server.properties
            - mountPath: /bin/log4j.properties
              name: configmap-kafkabroker2-server-log4j
              readOnly: false
              subPath: log4j.properties            
      dnsPolicy: ClusterFirstWithHostNet
      hostname: broker2
      volumes:
        - name: kafkabroker2-data
          emptyDir: {}
          #hostPath:
          #  path: /storage/data/kafka/kafkabroker1
          #  type: DirectoryOrCreate
        - name: kafkabroker2-logs
          emptyDir: {}
          #hostPath:
          #  path: /storage/logs/kafka/kafkabroker1
          #  type: DirectoryOrCreate
        - configMap:
            defaultMode: 509
            name: kafkabroker2
          name: configmap-kafkabroker2-volume
        - configMap:
            defaultMode: 509
            name: config-kafka
          name: configmap-kafkabroker2-server-prop
        - configMap:
            defaultMode: 509
            name: config-kafka-log4j
          name: configmap-kafkabroker2-server-log4j        
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafkabroker3
    project: base
  name: kafkabroker3
spec:
  selector:
    matchLabels:
      project: base
  template:
    metadata:
      labels:
        app: kafkabroker3
        project: base
    spec:
      containers:
        - name : kafkabroker3
          command:
            - /bin/run.sh
          env:
            - name: KAFKA_OPTS
              value: -javaagent:/opt/kafka/prometheus/jmx_prometheus_javaagent.jar=7071:/opt/kafka/prometheus/kafka-2_0_0.yml
          image : aggrik/kafka_multi:latest
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
            - mountPath: /data/kafka-logs
              name: kafkabroker3-data
            - mountPath: /opt/kafka/logs
              name: kafkabroker3-logs
            - mountPath: /bin/run.sh
              name: configmap-kafkabroker3-volume
              readOnly: false
              subPath: run.sh
            - mountPath: /bin/server.properties
              name: configmap-kafkabroker3-server-prop
              readOnly: false
              subPath: server.properties
            - mountPath: /bin/log4j.properties
              name: configmap-kafkabroker3-server-log4j
              readOnly: false
              subPath: log4j.properties            
      dnsPolicy: ClusterFirstWithHostNet
      hostname: broker3
      volumes:
        - name: kafkabroker3-data
          emptyDir: {}
          #hostPath:
          #  path: /storage/data/kafka/kafkabroker1
          #  type: DirectoryOrCreate
        - name: kafkabroker3-logs
          emptyDir: {}
          #hostPath:
          #  path: /storage/logs/kafka/kafkabroker1
          #  type: DirectoryOrCreate
        - configMap:
            defaultMode: 509
            name: kafkabroker3
          name: configmap-kafkabroker3-volume
        - configMap:
            defaultMode: 509
            name: config-kafka
          name: configmap-kafkabroker3-server-prop
        - configMap:
            defaultMode: 509
            name: config-kafka-log4j
          name: configmap-kafkabroker3-server-log4j       