apiVersion: v1
kind: ConfigMap
metadata:
  name: nifi-configmap
data:
  run.sh: |-
    #!/bin/bash
    /opt/nifi/bin/nifi.sh run
    #    /opt/nifi-registry/bin/nifi-registry.sh start
    #    /opt/nifi/bin/nifi.sh start
    #    N_ATTEMPTS=0
    #    # Initial start-up can take a while...
    #    MAX_ATTEMPTS=100
    #    URL=localhost:8090/nifi/
    #    echo $URL
    #    until $(curl --output /dev/null --head --silent --fail -L  http://$URL); do
    #        if [ ${N_ATTEMPTS} -eq ${MAX_ATTEMPTS} ]
    #        then
    #          echo "Maximum number of attempts reached, exiting." >&2
    #          exit 1
    #        fi
    #
    #        echo "Could not reach $URL, trying again... (attempt number ${N_ATTEMPTS})"
    #        N_ATTEMPTS=$(( $N_ATTEMPTS + 1 ))
    #        sleep 5
    #    done
    #    /opt/nifi-toolkit/bin/cli.sh nifi create-reg-client -rcn registry -rcu http://localhost:18080 -u http://localhost:8090
    #    tail -fq /opt/nifi/logs/nifi-app.log /opt/nifi/logs/nifi-bootstrap.log /opt/nifi/logs/nifi-user.log
---
apiVersion : apps/v1
kind : Deployment
metadata:
  name: nifi
  labels:
    app : nifi
    project : base
spec:
  selector:
    matchLabels:
      project: base
  template:
    metadata:
      labels:
        project: base
        app : nifi
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name : nifi
          resources:
            requests:
              memory: "1Gi"
              cpu: 2
            limits:
              memory: "1Gi"
              cpu: 2
          image : aggrik/nifi:latest
          imagePullPolicy : IfNotPresent
          command: 
            - /opt/run.sh
          volumeMounts:
            - name: configmap-nifi-props
              mountPath: /opt/nifi/conf/nifi.properties
              readOnly: false
              subPath: nifi.properties
            - name: configmap-nifi-volume
              mountPath: /opt/run.sh
              readOnly: false
              subPath: run.sh
            - name: nifi-registry-database
              mountPath: /opt/nifi-registry/database
            - name: nifi-registry-flow-storage
              mountPath: /opt/nifi-registry/flow_storage
            - name: nifi-content-repository
              mountPath: /opt/nifi/content_repository
            - name: nifi-flowfile-repository
              mountPath: /opt/nifi/flowfile_repository
            - name: nifi-database-repository
              mountPath: /opt/nifi/database_repository
            - name: nifi-provenance-repository
              mountPath: /opt/nifi/provenance_repository
      volumes:
        - name: configmap-nifi-props
          configMap:
            defaultMode: 0775
            name: config-nifi
        - name: configmap-nifi-volume
          configMap:
            defaultMode: 0775
            name: nifi-configmap
        - name: nifi-registry-database
          emptyDir: {}
        - name: nifi-registry-flow-storage
          emptyDir: {}
        - name: nifi-content-repository
          emptyDir: {}
        - name: nifi-flowfile-repository
          emptyDir: {}
        - name: nifi-database-repository
          emptyDir: {}
        - name: nifi-provenance-repository
          emptyDir: {}
